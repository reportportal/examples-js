import { test, expect } from '@playwright/test';
import { ReportingApi} from '@reportportal/agent-js-playwright';

const suiteName = 'Test case id reporting suite';

test.describe(suiteName,  () => {
  ReportingApi.addAttributes([
    {
      key: 'feature',
      value: 'testCaseId',
    },
    {
      key: 'browser',
      value: 'chrome',
    },
    {
      value: 'demo',
    },
  ], suiteName);
  ReportingApi.setDescription('This suite demonstrates testCaseId reporting. Please see the [docs](https://reportportal.io/docs/Test-case-ID%3Ewhat-is-it-test-case-id)', suiteName);

  test('Simple failed test', async ({page}, testInfo) => {
    ReportingApi.addAttributes([
      {
        key: 'feature',
        value: 'autogeneratedTestCaseId',
      },
      {
        key: 'browser',
        value: 'chrome',
      },
      {
        value: 'demo',
      },
    ]);
    ReportingApi.setDescription(
      'This test should contain testCaseId that will be generated automatically based on [codeRef](https://reportportal.io/docs/Test-case-ID%3Ewhat-does-happen-if-you-do-not-report-items-with-test-case-id-)',
    );

    console.log(testInfo);
    await page.goto('https://playwright.dev/');
    const title = page.locator('.navbar__inner .navbar__title');
    await expect(title).toHaveText('wrong value');
  });

  test('Another simple passed test', async ({page}, testInfo) => {
    ReportingApi.addAttributes([
      {
        key: 'feature',
        value: 'explicitTestCaseId',
      },
      {
        key: 'browser',
        value: 'chrome',
      },
      {
        value: 'demo',
      },
    ]);
    ReportingApi.setDescription('This test should contain testCaseIdSpecified by user');
    // set testCaseIdManually
    ReportingApi.setTestCaseId('myCustomTestIdentifier');

    console.log(testInfo);
    await page.goto('https://playwright.dev/');
    const title = page.locator('.navbar__inner .navbar__title');
    await expect(title).toHaveText('Playwright');
  });
});
